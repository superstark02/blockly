[{"C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\index.js":"1","C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\App.js":"2","C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\reportWebVitals.js":"3","C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\customBlocks\\custom_Blocks.js":"4"},{"size":517,"mtime":1630605945445,"results":"5","hashOfConfig":"6"},{"size":2903,"mtime":1630668814096,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1630605945446,"results":"8","hashOfConfig":"6"},{"size":2212,"mtime":1630668229638,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8xeiri",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\index.js",[],"C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\App.js",["19","20"],"import \"./App.css\";\r\nimport \"./customBlocks/custom_Blocks\";\r\nimport React, { useState } from \"react\";\r\nimport { BlocklyWorkspace } from \"react-blockly\";\r\nimport Blockly from \"blockly\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function App() {\r\n  const [xml, setXml] = useState(\"\");\r\n  const [javascriptCode, setJavascriptCode] = useState(\"\");\r\n  const [output, setOutput] = useState(\"\");\r\n\r\n  const initialXml = '<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"123\" ></xml>';\r\n  const toolboxCategories = {\r\n    kind: \"categoryToolbox\",\r\n    contents: [\r\n      {\r\n        kind: \"category\",\r\n        name: \"Bot Blocks\",\r\n        colour: \"#5CA699\",\r\n        contents: [\r\n          {\r\n            kind: \"block\",\r\n            type: \"questions\"\r\n          },\r\n          {\r\n            kind: \"block\",\r\n            type: \"bot\"\r\n          }\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  function workspaceDidChange(workspace) {\r\n    const code = Blockly.JavaScript.workspaceToCode(workspace);\r\n    setJavascriptCode(code);\r\n  }\r\n\r\n  function reset() {\r\n    Blockly.mainWorkspace.clear()\r\n    setXml(initialXml); setJavascriptCode(\"\"); setOutput(\"\")\r\n  }\r\n\r\n  function runCode(code) {\r\n    try {\r\n      setOutput(eval(code));\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"parent\" >\r\n        <div style={{ width: \"100%\" }} >\r\n          <BlocklyWorkspace\r\n            toolboxConfiguration={toolboxCategories}\r\n            initialXml={initialXml}\r\n            className=\"fill-height\"\r\n            workspaceConfiguration={{\r\n              grid: {\r\n                spacing: 20,\r\n                length: 3,\r\n                colour: \"#ccc\",\r\n                snap: true,\r\n              },\r\n            }}\r\n            onWorkspaceChange={workspaceDidChange}\r\n            onXmlChange={setXml}\r\n          />\r\n        </div>\r\n        <div className=\"wrap\" >\r\n          <div>\r\n            <div style={{ textAlign: \"center\", width: \"100%\", marginBottom: \"20px\" }} >\r\n              {output}\r\n            </div>\r\n            <div className=\"wrap\" >\r\n              <div>\r\n                <div className=\"wrap\" >\r\n                  <div>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{ margin: \"0px 10px\" }} onClick={() => { runCode(javascriptCode) }} >\r\n                      Run\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => { reset() }} >\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div style={{ textAlign: 'center' }} >\r\n                  <p>\r\n                    Please do not forget to run the code after making changes üëç\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\reportWebVitals.js",[],"C:\\Users\\super\\.vscode\\reactblockly-customblocks\\src\\customBlocks\\custom_Blocks.js",[],{"ruleId":"21","severity":1,"message":"22","line":9,"column":10,"nodeType":"23","messageId":"24","endLine":9,"endColumn":13},{"ruleId":"25","severity":1,"message":"26","line":47,"column":17,"nodeType":"27","messageId":"28","endLine":47,"endColumn":21},"no-unused-vars","'xml' is assigned a value but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected"]